{"version":3,"sources":["webpack:///./src/components/Docs/Plugins/list/Module.vue?b233","webpack:///./src/components/Docs/Plugins/list/Module.vue?ece5","webpack:///./src/components/Docs/Plugins/list/Module.vue?6be0","webpack:///./src/components/Docs/Plugins/list/Module.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","expression","modifiers","deep","staticClass","attrs","source","_m","staticRenderFns","href","_v","Modulevue_type_custom_index_0_blockType_code_name_install","Component","options","code","list_Modulevue_type_custom_index_0_blockType_code_name_install","script","component","Object","componentNormalizer","__file","__webpack_exports__"],"mappings":"6GAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,aAAaC,KAAA,MAAAC,QAAA,aAAAC,MAAA,OAAAC,WAAA,SAAAC,WAA8EC,MAAA,KAAaC,YAAA,WAAuBT,EAAA,QAAaU,OAAOC,OAAA,aAAoBf,EAAAgB,GAAA,QACjRC,GAAA,WAAoC,IAAAjB,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,KAAAA,EAAA,KAAuBU,OAAOI,KAAA,0CAA+ClB,EAAAmB,GAAA,4BCDhLC,EAAA,SAAAC,GACAA,EAAAC,QAAAC,OAAAF,EAAAC,QAAAC,SACAF,EAAAC,QAAAC,KAAA,y9DCF2PC,EAAA,ECC3PC,KAKAC,EAAAC,OAAAC,EAAA,KAAAD,CACAF,EACA1B,EACAkB,GACA,EACA,KACA,KACA,MAMA,oBAAAO,KAAAE,GAEAA,EAAAJ,QAAAO,OAAA,aACAC,EAAA,WAAAJ","file":"js/b6fc.2ce1487c.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"t9n\",rawName:\"v-t9n.deep\",value:('docs'),expression:\"'docs'\",modifiers:{\"deep\":true}}],staticClass:\"plugin\"},[_c('Code',{attrs:{\"source\":\"install\"}}),_vm._m(0)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('a',{attrs:{\"href\":\"https://codepen.io/Ni55aN/pen/QOEbEW\"}},[_vm._v(\"Пример\")])])}]\n\nexport { render, staticRenderFns }","export default function (Component) {\n      if(!Component.options.code) Component.options.code = {};\n      Component.options.code['install'] = \"import ModulePlugin from 'rete-module-plugin';\\n\\nconst modules = {\\n    moduleName: { data: defaultData() }\\n}\\n\\neditor.use(ModulePlugin, { engine, modules });\\n\\nclass InputNumber extends Component {\\n    constructor() {\\n        super('Input number');\\n        this.module = {\\n            nodeType: 'input',\\n            socket: sockets.num\\n        }\\n    }\\n\\n    builder(node) {\\n        var out = new Output('output', 'Number', sockets.num); // the key must be 'output'\\n        var ctrl = new FieldControl(this.editor, 'name', {value: ''}); // the key must be 'name'\\n        var ctrl2 = new FieldControl(this.editor, 'number', {type: 'number', value: 1});\\n        \\n        return node\\n            .addControl(ctrl)\\n            .addControl(ctrl2)\\n            .addOutput(out);\\n    }\\n\\n    async worker(node, inputs, outputs) {\\n        if (!outputs['num'])\\n            outputs['num'] = node.data.number; // here you can modify received outputs of Input node\\n    }\\n};\\n\\nexport default class ModuleComponent extends Component {\\n\\n    constructor() {\\n        super(\\\"Module\\\");\\n        this.module = {\\n            nodeType: 'module'\\n        }\\n    }\\n\\n    builder(node) {\\n        var ctrl = new FieldControl(this.editor, 'module', {value: 'Module name..'}); // the key must be 'module'\\n        ctrl.onChange = () => {\\n            this.updateModuleSockets(node);\\n            node.update();\\n        }\\n        return node.addControl(ctrl);\\n    }\\n\\n    change(node, item) {\\n        node.data.module = item;\\n        this.editor.trigger('process');\\n    }\\n}\\n\\nclass OutputNumber extends Component {\\n    constructor() {\\n        super('Output number');\\n    }\\n\\n    builder(node) {\\n        var inp = new Input('input', 'Number', sockets.num); // the key must be 'input'\\n        var ctrl = new FieldControl(this.editor, 'name', {value: 'num'}); // the key must be 'name'\\n\\n        return node\\n            .addControl(ctrl)\\n            .addInput(inp);\\n    }\\n}\";\n    }","import mod from \"-!../../../../../loaders/code.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Module.vue?vue&type=custom&index=0&blockType=code&name=install\"; export default mod; export * from \"-!../../../../../loaders/code.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Module.vue?vue&type=custom&index=0&blockType=code&name=install\"","import { render, staticRenderFns } from \"./Module.vue?vue&type=template&id=0d845777&lang=pug&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* custom blocks */\nimport block0 from \"./Module.vue?vue&type=custom&index=0&blockType=code&name=install\"\nif (typeof block0 === 'function') block0(component)\n\ncomponent.options.__file = \"Module.vue\"\nexport default component.exports"],"sourceRoot":""}